package com.atmospherebbdo.util {	import com.atmospherebbdo.assertions.checkArgument;		import flash.utils.describeType;				/**	 * @author markhawley	 * 	 * Adds/redefines dynamic methods and properties at runtime. Works with	 * classes or individual objects. If it is called to attempt to monkey	 * patch a non-dynamic class, it throws an error.	 * 	 * @param	obj	* Object to patch (must be dynamic)	 * @param	methodName	String name to call function	 * @param	func	Function, the new function definition. If null, or 	 * 					omitted, the method is removed from the object.	 */	public function monkeyPatch( obj:*, methodName:String, func:Function=null ) :void	{		checkArgument( describeType(obj).@isDynamic == "true", 			"Cannot patch non-dynamic object." );		var t:*;				if (obj is Class)		{			t = obj.prototype;			}		else		{			t = obj;			} 				// handle null functions by removing the named method		if (func == null)		{			t[methodName] = null;			delete t[methodName];			return;		}				var theCall:Function = function (...rest) :*		{			return func.apply(obj, rest);		};				t[methodName] = theCall;	}}