package com.atmospherebbdo.random {	import com.atmospherebbdo.random.implementations.IRNGImplementation;	/**	 * @author markhawley	 */	public class RNG 	{			private var rng:IRNGImplementation;
		/**		 * Constructor.		 * 		 * @param	impl	IRNGImplementation to use internally		 * @param	seed	uint, to use as the seed for the internal RNG		 * 		 * @throws 		 */		public function RNG( impl:IRNGImplementation, seed:Number=-1 )		{			this.rng = impl;						// use a random seed if one was not given			if ( seed < 0 )			{				seed = Math.floor(Math.random() * uint.MAX_VALUE);				}			setSeed(seed);		}				public function setSeed( s:uint ) :void		{			rng.setSeed(s);		}				public function getSeed() :uint		{			return rng.getSeed();		}				public function random() :Number		{			return rng.random();		}	}}